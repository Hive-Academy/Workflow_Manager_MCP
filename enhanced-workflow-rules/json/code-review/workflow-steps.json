{
  "workflowSteps": [
    {
      "name": "implementation_context_and_codebase_analysis_validation",
      "displayName": "Implementation Context and MANDATORY CodebaseAnalysis Validation",
      "description": "Retrieve implementation context and validate against existing codebase analysis for quality consistency",
      "sequenceNumber": 1,
      "isRequired": true,
      "estimatedTime": "10-15 minutes",
      "stepType": "ACTION",
      "behavioralContext": {
        "approach": "MANDATORY codebase analysis validation with comprehensive implementation context acquisition",
        "principles": [
          "Use CodebaseAnalysis to validate implementation quality and consistency",
          "Verify implementation follows established patterns from existing analysis",
          "Confirm implementation addresses ALL issues identified in codebase analysis",
          "Focus review on areas identified as problematic in original analysis"
        ],
        "methodology": "Analysis-informed review with pattern consistency validation",
        "validationCriteria": {
          "patternConsistency": "Verify implementation follows established patterns",
          "technicalDebtPrevention": "Confirm implementation avoids identified problems",
          "integrationQuality": "Validate implementation respects integration points",
          "standardCompliance": "Verify adherence to documented coding standards",
          "qualityImprovement": "Confirm implementation addresses quality gaps"
        },
        "reviewStrategy": {
          "priorityTestingAreas": "Focus testing on analysis-identified problem areas",
          "integrationValidation": "Intensive testing of integration points from analysis",
          "qualityGateEmphasis": "Stricter validation where analysis identified gaps",
          "patternVerification": "Detailed review of established pattern usage",
          "improvementAssessment": "Evaluation of codebase quality enhancement"
        }
      },
      "approachGuidance": {
        "stepByStep": [
          "Execute TaskOperations.get with comprehensive inclusion for complete implementation context",
          "Extract and validate against existing CodebaseAnalysis (patterns, technical debt, integration points)",
          "Verify implementation follows established patterns and coding standards from analysis",
          "Confirm implementation addresses identified code smells and technical debt",
          "Plan review strategy focusing on integration points and quality gaps from analysis",
          "Analyze completed batches, subtasks, and acceptance criteria mapping"
        ],
        "contextAcquisitionSteps": [
          "Call TaskOperations.get with comprehensive parameters including implementation evidence",
          "Parse codebase analysis for established patterns and coding standards",
          "Extract implementation context including completed work and evidence",
          "Map implementation scope against acceptance criteria and requirements"
        ],
        "validationSteps": [
          "Verify implementation follows established patterns from codebase analysis",
          "Confirm technical debt prevention - implementation avoids identified problems",
          "Validate integration quality - implementation respects existing integration points",
          "Check standard compliance - adherence to documented coding standards"
        ],
        "strategyPlanningSteps": [
          "Plan review strategy focusing on analysis-identified problem areas",
          "Prioritize testing areas based on codebase analysis findings",
          "Emphasize quality gates where analysis identified gaps",
          "Prepare detailed pattern verification approach"
        ]
      },
      "qualityChecklist": [
        "Implementation context retrieved with comprehensive analysis and evidence",
        "CodebaseAnalysis validation confirms pattern consistency and standard compliance",
        "Technical debt prevention verified - implementation avoids identified problems",
        "Integration quality validated - implementation respects existing integration points",
        "Review strategy planned focusing on analysis-identified problem areas",
        "Implementation scope analyzed with completed batches and acceptance criteria mapping"
      ],
      "conditions": [],
      "actions": [
        {
          "name": "acquire_implementation_context",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "TaskOperations",
            "operation": "get",
            "parameters": {
              "includeLevel": "comprehensive",
              "includePlans": true,
              "includeSubtasks": true,
              "includeAnalysis": true,
              "includeComments": false,
              "includeCodebaseAnalysis": true,
              "includeImplementationEvidence": true
            }
          },
          "sequenceOrder": 1
        }
      ],
      "triggerReport": true,
      "reportType": "context_and_codebase_validation",
      "reportTemplate": "implementation_context_and_analysis_validation"
    },
    {
      "name": "comprehensive_manual_testing_and_functionality_validation",
      "displayName": "Comprehensive Manual Testing and Functionality Validation",
      "description": "Execute hands-on testing of all implemented functionality with user experience validation",
      "sequenceNumber": 2,
      "isRequired": true,
      "estimatedTime": "30-45 minutes",
      "stepType": "ACTION",
      "behavioralContext": {
        "approach": "Comprehensive hands-on testing with user experience and cross-platform validation",
        "principles": [
          "Manually test all primary features and user workflows comprehensively",
          "Validate user interface responsiveness, usability, and accessibility",
          "Test cross-browser compatibility and responsive design thoroughly",
          "Verify component integration and system integration functionality"
        ],
        "methodology": "Systematic manual testing with comprehensive validation coverage",
        "testingAreas": {
          "coreFunctionality": "Primary features, user workflows, data flow, business logic",
          "userInterface": "Interface responsiveness, usability, navigation efficiency",
          "dataFlow": "Input processing, output accuracy validation",
          "errorScenarios": "Error conditions, recovery mechanisms, error message clarity",
          "crossBrowserCompatibility": "Browser versions, responsive design, mobile compatibility",
          "deviceTesting": "Screen resolutions, performance consistency, feature parity",
          "componentIntegration": "Component interaction, system integration, API endpoints",
          "databaseIntegration": "Data persistence, retrieval operations validation",
          "accessibilityStandards": "Accessibility compliance, usability standards",
          "userWorkflows": "End-to-end workflows, user journey efficiency",
          "errorHandling": "Error message clarity, actionable feedback",
          "performanceExperience": "Interface responsiveness, loading times"
        }
      },
      "approachGuidance": {
        "stepByStep": [
          "Execute core functionality testing: primary features, user workflows, data flow validation",
          "Perform user experience validation: interface responsiveness, navigation flow, error message clarity",
          "Conduct cross-browser and device testing: compatibility, responsive design, performance consistency",
          "Execute integration testing: component interaction, system integration, API and database validation",
          "Test error scenarios and recovery mechanisms comprehensively",
          "Validate accessibility standards and usability compliance"
        ],
        "functionalityTestingSteps": [
          "Test all primary features and core functionality manually",
          "Validate user workflows and business logic implementation",
          "Verify data flow accuracy and processing correctness",
          "Test error scenarios and recovery mechanisms"
        ],
        "userExperienceSteps": [
          "Validate interface responsiveness and usability",
          "Test navigation flow and user journey efficiency",
          "Verify error message clarity and actionable feedback",
          "Check accessibility standards and compliance"
        ],
        "crossPlatformSteps": [
          "Test cross-browser compatibility and responsive design",
          "Validate performance consistency across devices",
          "Check feature parity and screen resolution handling",
          "Verify mobile compatibility and touch interactions"
        ],
        "integrationSteps": [
          "Test component interaction and system integration",
          "Validate API endpoints and database operations",
          "Verify data persistence and retrieval functionality",
          "Check integration points and service interactions"
        ]
      },
      "qualityChecklist": [
        "Core functionality manually tested with all primary features and workflows validated",
        "User experience thoroughly validated including interface responsiveness and usability",
        "Cross-browser and device compatibility tested with responsive design verification",
        "Integration testing completed for components, systems, APIs, and database operations",
        "Error scenarios and recovery mechanisms comprehensively tested",
        "Accessibility standards and usability compliance verified"
      ],
      "conditions": [
        {
          "name": "context_and_analysis_validated",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "implementation_context_and_codebase_analysis_validation"
            }
          },
          "isRequired": true
        }
      ],
      "actions": [],
      "triggerReport": true,
      "reportType": "comprehensive_manual_testing",
      "reportTemplate": "manual_testing_and_functionality_validation"
    },
    {
      "name": "security_performance_and_technical_standards_validation",
      "displayName": "Security, Performance, and Technical Standards Validation",
      "description": "Comprehensive security testing, performance validation, and SOLID principles verification",
      "sequenceNumber": 3,
      "isRequired": true,
      "estimatedTime": "35-50 minutes",
      "stepType": "ACTION",
      "behavioralContext": {
        "approach": "Comprehensive security testing with performance validation and technical excellence verification",
        "principles": [
          "Thorough security validation including OWASP Top 10 vulnerability assessment",
          "Performance testing with metrics validation and scalability assessment",
          "SOLID principles verification and design pattern implementation review",
          "Code quality assessment with clean code practices validation"
        ],
        "methodology": "Multi-faceted validation covering security, performance, and technical excellence",
        "securityAreas": {
          "inputValidation": "SQL injection, XSS, CSRF protection, input sanitization",
          "authenticationAuthorization": "Authentication mechanisms, session management, access control",
          "dataProtection": "Data encryption, privacy compliance, secure communication",
          "vulnerabilityAssessment": "OWASP top 10, file upload security, dependency vulnerabilities"
        },
        "performanceAreas": {
          "performanceMetrics": "Response times, load testing, stress testing, memory usage",
          "userExperiencePerformance": "Page load times, interactive elements, resource loading",
          "scalabilityAssessment": "Concurrent users, data volume, resource utilization, bottlenecks"
        },
        "technicalValidationAreas": {
          "solidPrinciples": "Single responsibility, open/closed, Liskov substitution, interface segregation, dependency inversion",
          "designPatterns": "Pattern appropriateness, correct implementation, pattern integration",
          "codeQuality": "Clean code practices, documentation quality, error handling, resource management"
        }
      },
      "approachGuidance": {
        "stepByStep": [
          "Execute comprehensive security testing: input validation, authentication, data protection, vulnerability assessment",
          "Perform performance and scalability testing: response times, load testing, resource utilization, bottleneck identification",
          "Verify SOLID principles compliance: Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion",
          "Validate design pattern implementation: appropriateness, correct implementation, pattern integration",
          "Assess code quality: clean code practices, documentation quality, error handling, resource management",
          "Document security validation, performance metrics, and technical standards compliance"
        ],
        "securityTestingSteps": [
          "Test input validation for SQL injection, XSS, and CSRF protection",
          "Validate authentication mechanisms and session management",
          "Verify data protection, encryption, and secure communication",
          "Assess vulnerabilities using OWASP top 10 and dependency analysis"
        ],
        "performanceTestingSteps": [
          "Measure response times and conduct load testing",
          "Test user experience performance including page load times",
          "Assess scalability with concurrent users and data volume",
          "Identify bottlenecks and resource utilization issues"
        ],
        "technicalValidationSteps": [
          "Verify SOLID principles compliance for all components",
          "Review design pattern implementation for appropriateness",
          "Assess code quality including clean code practices",
          "Validate documentation quality and error handling"
        ]
      },
      "qualityChecklist": [
        "Security testing comprehensive including input validation, authentication, and vulnerability assessment",
        "Performance testing completed with response times, load testing, and scalability validation",
        "SOLID principles compliance verified for all implemented components",
        "Design pattern implementation reviewed for appropriateness and correct implementation",
        "Code quality assessed including clean code practices and documentation quality",
        "Technical standards validation documented with compliance evidence"
      ],
      "conditions": [
        {
          "name": "manual_testing_completed",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "comprehensive_manual_testing_and_functionality_validation"
            }
          },
          "isRequired": true
        }
      ],
      "actions": [],
      "triggerReport": true,
      "reportType": "security_performance_technical_validation",
      "reportTemplate": "security_performance_and_technical_standards"
    },
    {
      "name": "acceptance_criteria_verification_and_evidence_collection",
      "displayName": "Acceptance Criteria Verification and Evidence Collection",
      "description": "Systematic validation against acceptance criteria with comprehensive evidence documentation",
      "sequenceNumber": 4,
      "isRequired": true,
      "estimatedTime": "20-30 minutes",
      "stepType": "ACTION",
      "behavioralContext": {
        "approach": "Systematic acceptance criteria validation with comprehensive evidence collection and documentation",
        "principles": [
          "Verify all specified functionality against original acceptance criteria",
          "Document specific evidence of requirement satisfaction with test results",
          "Collect comprehensive validation evidence for decision support",
          "Prepare detailed assessment for review decision making"
        ],
        "methodology": "Evidence-based verification with systematic criteria validation",
        "verificationAreas": {
          "functionalRequirements": "Feature completeness, business logic, data validation, integration",
          "technicalRequirements": "Architecture compliance, performance, security, quality testing",
          "userExperienceRequirements": "User workflows, interface usability, acceptance criteria"
        },
        "evidenceCategories": {
          "requirementSatisfaction": "Specific evidence of criteria satisfaction",
          "testResults": "Comprehensive testing results and validation",
          "performanceMetrics": "Performance testing results and benchmarks",
          "securityValidation": "Security testing results and compliance",
          "qualityMetrics": "Code quality metrics and standards compliance"
        }
      },
      "approachGuidance": {
        "stepByStep": [
          "Verify functional requirements: feature completeness, business logic, data validation, integration requirements",
          "Validate technical requirements: architecture compliance, performance benchmarks, security criteria, quality standards",
          "Document evidence collection: requirement satisfaction evidence, test results, performance metrics, security validation",
          "Compile comprehensive validation evidence for review decision support",
          "Prepare detailed assessment documentation with rationale and supporting evidence",
          "Evaluate overall implementation completeness against all acceptance criteria"
        ],
        "verificationSteps": [
          "Verify functional requirements against feature completeness",
          "Validate technical requirements including architecture compliance",
          "Check user experience requirements and interface usability",
          "Confirm integration requirements and system compatibility"
        ],
        "evidenceCollectionSteps": [
          "Document specific evidence of requirement satisfaction",
          "Compile comprehensive testing results and validation data",
          "Record performance metrics and benchmark results",
          "Collect security validation and compliance evidence"
        ],
        "assessmentSteps": [
          "Prepare detailed assessment documentation with rationale",
          "Compile supporting evidence for review decision making",
          "Evaluate overall implementation completeness",
          "Document quality metrics and standards compliance"
        ]
      },
      "qualityChecklist": [
        "Functional requirements verified with feature completeness and business logic validation",
        "Technical requirements validated including architecture compliance and performance benchmarks",
        "Evidence collection comprehensive with requirement satisfaction documentation",
        "Test results compiled with performance metrics and security validation evidence",
        "Assessment documentation prepared with detailed rationale and supporting evidence",
        "Implementation completeness evaluated against all original acceptance criteria"
      ],
      "conditions": [
        {
          "name": "security_performance_technical_validated",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "security_performance_and_technical_standards_validation"
            }
          },
          "isRequired": true
        }
      ],
      "actions": [],
      "triggerReport": true,
      "reportType": "acceptance_criteria_verification_and_evidence",
      "reportTemplate": "acceptance_criteria_and_evidence_collection"
    },
    {
      "name": "review_decision_and_workflow_completion",
      "displayName": "Review Decision and Workflow Completion",
      "description": "Make evidence-based review decision and execute appropriate workflow completion or escalation",
      "sequenceNumber": 5,
      "isRequired": true,
      "estimatedTime": "15-25 minutes",
      "stepType": "ACTION",
      "behavioralContext": {
        "approach": "Evidence-based review decision with appropriate workflow completion or escalation execution",
        "principles": [
          "Make review decision based on comprehensive evidence and quality assessment",
          "Create detailed review report with findings, strengths, and issues documentation",
          "Execute appropriate workflow completion (APPROVED) or escalation (NEEDS_CHANGES)",
          "Preserve comprehensive context for receiving role or task completion"
        ],
        "methodology": "Decision matrix application with workflow transition execution"
      },
      "approachGuidance": {
        "stepByStep": [
          "Evaluate all evidence against approval criteria matrix for informed decision making",
          "Create comprehensive review report with status, findings, strengths, issues, and evidence",
          "Make review decision: APPROVED, APPROVED_WITH_RESERVATIONS, or NEEDS_CHANGES",
          "Execute appropriate workflow transition: complete task (if approved) or escalate (if changes needed)",
          "Document final assessment with production readiness status and context preservation",
          "Ensure comprehensive handoff documentation for receiving role or completion"
        ]
      },
      "qualityChecklist": [
        "Review decision based on comprehensive evidence evaluation and quality assessment",
        "Review report created with detailed findings, strengths, issues, and acceptance criteria verification",
        "Appropriate workflow transition executed based on review decision outcome",
        "Final assessment documented with production readiness status and rationale",
        "Context preservation comprehensive for receiving role or task completion",
        "Workflow completion includes all validation evidence and quality documentation"
      ],
      "conditions": [
        {
          "name": "acceptance_criteria_verified_and_evidence_collected",
          "conditionType": "PREVIOUS_STEP_COMPLETED",
          "logic": {
            "check": "step_completed",
            "parameters": {
              "stepName": "acceptance_criteria_verification_and_evidence_collection"
            }
          },
          "isRequired": true
        }
      ],
      "actions": [
        {
          "name": "create_comprehensive_review_report",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "ReviewOperations",
            "operation": "create_review",
            "parameters": {
              "reviewData": {
                "status": "{{APPROVED_or_APPROVED_WITH_RESERVATIONS_or_NEEDS_CHANGES}}",
                "summary": "{{comprehensive_review_summary_with_key_findings}}",
                "strengths": "{{implementation_strengths_and_quality_highlights}}",
                "issues": "{{identified_issues_and_improvement_areas}}",
                "acceptanceCriteriaVerification": "{{criterion_verification_status_and_evidence}}",
                "manualTestingResults": "{{hands_on_testing_and_validation_results}}",
                "requiredChanges": "{{specific_changes_if_NEEDS_CHANGES_status}}"
              }
            }
          },
          "sequenceOrder": 1
        },
        {
          "name": "execute_workflow_completion_or_escalation",
          "actionType": "MCP_CALL",
          "actionData": {
            "serviceName": "WorkflowOperations",
            "operation": "{{complete_or_escalate_based_on_review_decision}}",
            "parameters": {
              "fromRole": "code-review",
              "toRole": "{{task_completion_or_senior_developer_based_on_decision}}",
              "completionData": {
                "summary": "{{implementation_status_with_quality_gates_satisfaction}}",
                "filesModified": "{{array_of_final_implemented_files}}",
                "acceptanceCriteriaVerification": "{{verified_criteria_with_evidence}}",
                "productionReadiness": "{{production_readiness_assessment}}"
              },
              "escalationData": {
                "reason": "{{implementation_requires_changes_before_approval}}",
                "severity": "{{escalation_severity_level}}",
                "blockers": "{{specific_issues_requiring_resolution}}",
                "improvementGuidance": "{{detailed_guidance_for_resolution}}"
              }
            }
          },
          "sequenceOrder": 2
        }
      ],
      "triggerReport": true,
      "reportType": "review_decision_and_workflow_completion",
      "reportTemplate": "final_review_decision_and_completion"
    }
  ]
}
