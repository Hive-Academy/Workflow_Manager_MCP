{
  "roleTransitions": [
    {
      "fromRoleId": "integration-engineer",
      "toRoleId": "boomerang",
      "transitionName": "integration_engineer_to_boomerang_completion",
      "conditions": {
        "userDeliveryComplete": true,
        "deploymentSuccessful": true,
        "monitoringEstablished": true,
        "knowledgePreserved": true
      },
      "requirements": {
        "comprehensiveDelivery": true,
        "productionValidated": true,
        "documentationComplete": true,
        "operationalSupport": true
      },
      "validationRules": {
        "userDeliveryComplete": "User delivery completed with comprehensive documentation",
        "monitoringEstablished": "Post-deployment monitoring established and active",
        "deploymentSuccessful": "Production deployment successful with validation",
        "knowledgePreserved": "Knowledge assets preserved with implementation evidence"
      },
      "handoffGuidance": {
        "contextToProvide": [
          "Complete deployment success confirmation with metrics",
          "User delivery documentation with success criteria",
          "Post-deployment monitoring results and baselines",
          "Knowledge assets preserved with implementation evidence",
          "Operational support procedures established"
        ],
        "projectClosure": [
          "Final project validation and success confirmation",
          "Stakeholder communication with delivery evidence",
          "Lessons learned documentation and knowledge sharing",
          "Future enhancement planning based on implementation",
          "Organizational learning integration and process improvement"
        ],
        "successMetrics": [
          "All acceptance criteria satisfied with evidence",
          "Production deployment successful with monitoring",
          "User adoption and satisfaction metrics established",
          "Knowledge preservation completed for future reference",
          "Process improvements identified and documented"
        ]
      },
      "contextPreservation": {
        "deploymentResults": "Complete deployment success confirmation with metrics",
        "userDeliveryEvidence": "User delivery documentation with success criteria",
        "monitoringBaselines": "Post-deployment monitoring results and baselines",
        "knowledgeAssets": "Knowledge assets preserved with implementation evidence",
        "operationalProcedures": "Operational support procedures established"
      },
      "isActive": true
    },
    {
      "fromRoleId": "integration-engineer",
      "toRoleId": "senior-developer",
      "transitionName": "integration_engineer_to_senior_developer_rollback",
      "conditions": {
        "deploymentIssues": true,
        "rollbackRequired": true,
        "technicalProblemsIdentified": true,
        "implementationFixesNeeded": true
      },
      "requirements": {
        "issuesDocumented": true,
        "rollbackPlanCreated": true,
        "fixRequirementsDefinied": true,
        "timelineEstablished": true
      },
      "validationRules": {
        "deploymentIssuesDocumented": "Deployment issues must be clearly documented with evidence",
        "rollbackPlanComplete": "Rollback plan must be complete with step-by-step procedures",
        "fixRequirementsClear": "Fix requirements must be clearly defined with acceptance criteria",
        "timelineRealistic": "Timeline for fixes must be realistic and achievable"
      },
      "handoffGuidance": {
        "issueContext": [
          "Detailed deployment issues with root cause analysis",
          "Impact assessment of identified problems",
          "Rollback procedures and current system state",
          "Fix requirements with specific technical guidance",
          "Timeline constraints for issue resolution"
        ],
        "fixGuidance": [
          "Address deployment-specific issues identified",
          "Maintain system stability during fix implementation",
          "Test fixes in staging environment before deployment",
          "Document all changes made during fix process",
          "Verify fixes against deployment requirements"
        ],
        "qualityExpectations": [
          "All deployment issues must be resolved",
          "No regression in existing functionality",
          "Deployment process must be validated",
          "Documentation updated to reflect changes",
          "Integration testing completed successfully"
        ]
      },
      "contextPreservation": {
        "deploymentIssues": "Detailed deployment issues with root cause analysis",
        "rollbackProcedures": "Rollback procedures and current system state",
        "fixRequirements": "Fix requirements with specific technical guidance",
        "impactAssessment": "Impact assessment of identified problems",
        "timelineConstraints": "Timeline constraints for issue resolution"
      },
      "isActive": true
    }
  ]
}
